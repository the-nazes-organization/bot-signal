# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

on:
  push:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  GCE_INSTANCE: signal-bot
  GCE_INSTANCE_ZONE: us-central1-a

jobs:
  gcloud_cicd:
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: "Auth to google cloud"
      id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        workload_identity_provider: "projects/417901482483/locations/global/workloadIdentityPools/my-pool/providers/my-provider"
        service_account: 'github-action-sa@signal-bot-368420.iam.gserviceaccount.com'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and push Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Deploy
      run: |-
        gcloud compute instances update-container "signal-bot" \
          --zone "${{ env.GCE_INSTANCE_ZONE }}" \
          --container-image "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"